name: 'Release'

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: 'ubuntu-latest'

    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'main'

      - name: Install dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: make binaryen python3.11 curl unzip

      - name: Install extism-js
        run: |
          curl -O https://raw.githubusercontent.com/extism/js-pdk/main/install.sh
          bash install.sh
          ldd --version

      - name: Install moodriver
        run: |
          curl -L -o moodriver.zip https://github.com/Moosync/moodriver/releases/download/v1.0.0/moodriver-x86_64-unknown-linux-gnu.zip
          unzip moodriver.zip
          chmod +x moodriver
          sudo mv moodriver /usr/local/bin/

      - name: Install Bun
        uses: oven-sh/setup-bun@v2

      - name: Run Tests
        run: bun run build # TODO: Switch this to test once moodriver is fixed

      - name: Get release name
        id: date
        run: |
          echo "{release_name}={Extensions release ($(date +'%Y-%m-%d'))}" >> $GITHUB_STATE

      # Ugh I wanted to replace this with a bun script but @actions/github has weird type issues that I don't want to deal with
      - name: Create Release
        uses: actions/github-script@v2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            console.log('environment', process.versions);

            const fs = require('fs').promises;

            const { repo: { owner, repo }, sha } = context;
            console.log({ owner, repo, sha });

            const release = await github.repos.createRelease({
              owner, repo,
              tag_name: `release-${sha}`,
              draft: false,
              target_commitish: sha
            });

            console.log('created release', { release });

            const file = (await fs.readdir('./')).find((f) => f.endsWith('.msox'))

            await github.repos.uploadReleaseAsset({
              owner, repo,
              release_id: release.data.id,
              name: file,
              data: await fs.readFile(`./${file}`)
            });
